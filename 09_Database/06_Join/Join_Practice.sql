-- #6203
-- ORACLE
SELECT s.NAME 학생이름, e.TOTAL 점수, c.GRADE 학점
FROM T_STUDENT s, T_EXAM01 e, T_CREDIT c
WHERE s.STUDNO = e.STUDNO AND e.TOTAL BETWEEN c.MIN_POINT AND c.MAX_POINT;

-- ANSI
SELECT s.NAME 학생이름, e.TOTAL 점수, c.GRADE 학점
FROM T_STUDENT s 
	JOIN T_EXAM01 e ON s.STUDNO = e.STUDNO 
	JOIN T_CREDIT c ON e.TOTAL BETWEEN c.MIN_POINT AND c.MAX_POINT;

-- #6204
-- ORACLE
SELECT c.C_NAME 고객명, c.C_POINT POINT, g.G_NAME 상품명
FROM T_CUSTOMER c, T_GIFT g
WHERE c.C_POINT > g.G_START AND g.G_NAME = '산악용자전거';

-- ANSI
SELECT c.C_NAME 고객명, c.C_POINT POINT, g.G_NAME 상품명
FROM T_CUSTOMER c
	JOIN T_GIFT g ON c.C_POINT > g.G_START AND g.G_NAME = '산악용자전거';

-- #6205
SELECT * FROM T_POST;
-- ORACLE
SELECT e.name 이름
	, TO_CHAR(sysdate, 'YYYY') - TO_CHAR(BIRTHDAY, 'YYYY') + 1  현재나이 
	, nvl(e.post, '') 현재직급
	, p.POST 예상직급
FROM T_EMP2 e, T_POST p
WHERE TO_CHAR(sysdate, 'YYYY') - TO_CHAR(BIRTHDAY, 'YYYY') + 1 BETWEEN p.S_AGE AND p.E_AGE;

-- ANSI
SELECT e.name 이름
	, TO_CHAR(sysdate, 'YYYY') - TO_CHAR(BIRTHDAY, 'YYYY') + 1  현재나이 
	, nvl(e.post, '') 현재직급
	, p.POST 예상직급
FROM T_EMP2 e 
	JOIN T_POST p ON TO_CHAR(sysdate, 'YYYY') - TO_CHAR(BIRTHDAY, 'YYYY') + 1 BETWEEN p.S_AGE AND p.E_AGE;


-- #6210
SELECT p1.PROFNO 교수번호
	, p1.NAME 교수명
	, TO_CHAR(p1.HIREDATE, 'YYYY-MM-DD') 입사일 
	, COUNT(NVL2(p2.PROFNO, p1.PROFNO, NULL)) 빠른사람 	
FROM T_PROFESSOR p1 
	LEFT OUTER JOIN T_PROFESSOR p2 ON p1.HIREDATE > p2.HIREDATE 
GROUP BY p1.PROFNO, p1.name, p1.HIREDATE
ORDER BY 빠른사람;

SELECT * FROM T_PROFESSOR;
